<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Process.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ETA.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Comments.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Process.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ETA.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Comments.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>